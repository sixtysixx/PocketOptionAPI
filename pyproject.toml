###########################
# Project metadata for PyPI
###########################
[project]
name = "pocketoptionapi-async"
version = "2.0.0"
description = "A comprehensive, modern async Python API for PocketOption trading platform."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "PocketOptionAPI Team", email = "contact@chipadevteam.com" }
]
maintainers = [
    { name = "PocketOptionAPI Team", email = "contact@chipadevteam.com" }
]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
    "asyncio",
    "python-dotenv>=1.0.0",
    "tzlocal>=4.0.0",
    "typing-extensions>=4.0.0",
    "rich>=13.0.0",
    "selenium>=4.0.0",
    "webdriver-manager>=4.0.0",
    "psutil>=5.9.0",
    "loguru>=0.7.2",
    "pydantic>=2.0.0",
    "pandas>=2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/ChipaDevTeam/PocketOptionAPI"
"Bug Tracker" = "https://github.com/ChipaDevTeam/PocketOptionAPI/issues"

[tool.setuptools]
packages = ["pocketoptionapi_async"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["pocketoptionapi_async"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "websockets.*",
    "loguru.*",
    "rich.*",
]
ignore_missing_imports = true
